name: Publish

on:
  push:
    branches:
      - main
    paths:
      - 'release/app/package.json'

jobs:
  check-version:
    runs-on: macos-latest
    outputs:
      version_changed: ${{ steps.compare.outputs.version_changed }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch previous package.json
        run: |
          git fetch origin main --depth=2

      - name: Get previous version
        id: prev
        run: |
          git show HEAD^:release/app/package.json | jq -r .version > old_version.txt
          echo "OLD_VERSION=$(cat old_version.txt)" >> $GITHUB_ENV

      - name: Get current version
        id: curr
        run: |
          jq -r .version release/app/package.json > new_version.txt
          echo "NEW_VERSION=$(cat new_version.txt)" >> $GITHUB_ENV

      - name: Compare versions
        id: compare
        run: |
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
        env:
          OLD_VERSION: ${{ env.OLD_VERSION }}
          NEW_VERSION: ${{ env.NEW_VERSION }}

  test:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Run tests using reusable action
        uses: ./.github/actions/test

  publish:
    needs: test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Publish releases
        env:
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win
